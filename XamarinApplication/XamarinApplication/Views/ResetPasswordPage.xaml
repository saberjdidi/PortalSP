<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage
    x:Class="XamarinApplication.Views.ResetPasswordPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:converters="clr-namespace:XamarinApplication.Validation"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:i18n="clr-namespace:XamarinApplication.Helpers"
    xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    mc:Ignorable="d">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"
            PositionIn="Center"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.8" />
    </pages:PopupPage.Animation>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NotNullOrEmptyStringConverter x:Key="NotNullOrEmptyStringConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout
        Margin="5,50,5,50"
        HorizontalOptions="Center"
        VerticalOptions="Center">
        <Frame
            Margin="1"
            BackgroundColor="#FDFFFC"
            BorderColor="#FDFFFC"
            HasShadow="true">
            <StackLayout>
                <StackLayout HorizontalOptions="End" VerticalOptions="End">
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClosePopup}" NumberOfTapsRequired="1" />
                    </StackLayout.GestureRecognizers>
                    <Image
                        HeightRequest="45"
                        Source="close.png"
                        WidthRequest="45" />
                </StackLayout>
                <StackLayout Orientation="Horizontal">
                    <Label
                        Margin="5,-20,5,1"
                        FontAttributes="Bold"
                        FontSize="Large"
                        HorizontalOptions="Center"
                        Text="{Binding User.firstName}" />
                    <Label
                        Margin="5,-20,5,1"
                        FontAttributes="Bold"
                        FontSize="Large"
                        HorizontalOptions="Center"
                        Text="{Binding User.lastName}" />
                </StackLayout>
                <inputLayout:SfTextInputLayout
                    ContainerBackgroundColor="#E6EEF9"
                    ContainerType="Outlined"
                    FocusedColor="#0450C2"
                    Hint="New Password"
                    OutlineCornerRadius="20"
                    UnfocusedColor="#28BAAE">
                    <Entry
                        x:Name="NewPasswordEntry"
                        Placeholder="New Password"
                        Text="{Binding NewPassword}"
                        TextColor="Black"
                        WidthRequest="500" />
                </inputLayout:SfTextInputLayout>
                <Label
                    FontSize="Small"
                    HorizontalTextAlignment="Center"
                    IsVisible="False"
                    Text="Password is required"
                    TextColor="OrangeRed">
                    <Label.Triggers>
                        <MultiTrigger TargetType="Label">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference NewPasswordEntry}, Path=Text, Converter={StaticResource NotNullOrEmptyStringConverter}}" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="{Binding Value}" />
                        </MultiTrigger>
                    </Label.Triggers>
                </Label>
                <Button
                    BackgroundColor="#D9E5D6"
                    Command="{Binding ResetPassword}"
                    CornerRadius="25"
                    HorizontalOptions="Center"
                    Text="Reset"
                    TextColor="red"
                    WidthRequest="140">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference NewPasswordEntry}, Path=Text, Converter={StaticResource NotNullOrEmptyStringConverter}}" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
            </StackLayout>

        </Frame>
    </StackLayout>
</pages:PopupPage>